ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/main.c"
  20              		.section	.rodata.LogTestTask.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 493A00   		.ascii	"I:\000"
  24 0003 00       		.align	2
  25              	.LC1:
  26 0004 1B5B313B 		.ascii	"\033[1;32m\000"
  26      33326D00 
  27              		.align	2
  28              	.LC2:
  29 000c 20202573 		.ascii	"  %s%sLogTask is ready!\012\015\012%s\000"
  29      25734C6F 
  29      67546173 
  29      6B206973 
  29      20726561 
  30 0029 000000   		.align	2
  31              	.LC3:
  32 002c 1B5B306D 		.ascii	"\033[0m\000"
  32      00
  33 0031 000000   		.align	2
  34              	.LC4:
  35 0034 20202573 		.ascii	"  %s%sHELLO WORLD!\015\012%s\000"
  35      25734845 
  35      4C4C4F20 
  35      574F524C 
  35      44210D0A 
  36 004b 00       		.align	2
  37              	.LC5:
  38 004c 573A00   		.ascii	"W:\000"
  39 004f 00       		.align	2
  40              	.LC6:
  41 0050 1B5B313B 		.ascii	"\033[1;33m\000"
  41      33336D00 
  42              		.align	2
  43              	.LC7:
  44 0058 20202573 		.ascii	"  %s%sFuck!the number is %d\015\012%s\000"
  44      25734675 
  44      636B2174 
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 2


  44      6865206E 
  44      756D6265 
  45              		.align	2
  46              	.LC8:
  47 0078 20202573 		.ascii	"  %s%sFUCK WORLD!\015\012%s\000"
  47      25734655 
  47      434B2057 
  47      4F524C44 
  47      210D0A25 
  48 008e 0000     		.align	2
  49              	.LC9:
  50 0090 453A00   		.ascii	"E:\000"
  51 0093 00       		.align	2
  52              	.LC10:
  53 0094 1B5B313B 		.ascii	"\033[1;31m\000"
  53      33316D00 
  54              		.align	2
  55              	.LC11:
  56 009c 20202573 		.ascii	"  %s%sshit!the number is %d\015\012%s\000"
  56      25737368 
  56      69742174 
  56      6865206E 
  56      756D6265 
  57              		.section	.text.LogTestTask,"ax",%progbits
  58              		.align	1
  59              		.global	LogTestTask
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	LogTestTask:
  65              	.LVL0:
  66              	.LFB142:
  67              		.file 2 "App/robot_task.h"
   1:App/robot_task.h **** 
   2:App/robot_task.h **** #pragma once
   3:App/robot_task.h **** 
   4:App/robot_task.h **** /* RTOS层及mcu main接口 */
   5:App/robot_task.h **** #include "FreeRTOS.h"
   6:App/robot_task.h **** #include "task.h"
   7:App/robot_task.h **** #include "main.h"
   8:App/robot_task.h **** #include "cmsis_os.h"
   9:App/robot_task.h **** 
  10:App/robot_task.h **** /* app 层接口头文件 */
  11:App/robot_task.h **** #include "logtest.h"
  12:App/robot_task.h **** #include "debug.h"
  13:App/robot_task.h **** 
  14:App/robot_task.h **** /* bsp 层接口头文件 */
  15:App/robot_task.h **** #include "bsp_log.h"
  16:App/robot_task.h **** 
  17:App/robot_task.h **** /* Definitions for TaskHand */
  18:App/robot_task.h **** osThreadId_t LogTestTaskHandHandle;
  19:App/robot_task.h **** osThreadId_t DebugTaskHandleHandle;
  20:App/robot_task.h **** 
  21:App/robot_task.h **** /* Definitions for TaskFunc */
  22:App/robot_task.h **** void LogTestTask(void *argument);
  23:App/robot_task.h **** void DebugTask(void *argument);
  24:App/robot_task.h **** 
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 3


  25:App/robot_task.h **** /**
  26:App/robot_task.h ****  * @brief os任务创建初始化函数
  27:App/robot_task.h ****  * 
  28:App/robot_task.h ****  */
  29:App/robot_task.h **** void osTaskInit(void)
  30:App/robot_task.h **** {
  31:App/robot_task.h ****     const osThreadAttr_t LogTestTaskHand_attributes = {
  32:App/robot_task.h ****     .name = "LogTestTaskHand",
  33:App/robot_task.h ****     .stack_size = 128 * 4,
  34:App/robot_task.h ****     .priority = (osPriority_t) osPriorityLow,
  35:App/robot_task.h ****     };
  36:App/robot_task.h ****     LogTestTaskHandHandle = osThreadNew(LogTestTask, NULL, &LogTestTaskHand_attributes);
  37:App/robot_task.h **** 
  38:App/robot_task.h **** 
  39:App/robot_task.h ****     const osThreadAttr_t DebugTaskHandle_attributes = {
  40:App/robot_task.h ****     .name = "DebugTaskHandle",
  41:App/robot_task.h ****     .stack_size = 128 * 4,
  42:App/robot_task.h ****     .priority = (osPriority_t) osPriorityLow,
  43:App/robot_task.h ****     };
  44:App/robot_task.h ****     DebugTaskHandleHandle = osThreadNew(DebugTask, NULL, &DebugTaskHandle_attributes);
  45:App/robot_task.h **** 
  46:App/robot_task.h **** }
  47:App/robot_task.h **** 
  48:App/robot_task.h **** /**
  49:App/robot_task.h ****  * @brief LogTest 任务函数
  50:App/robot_task.h ****  *        测试打印日志的效果
  51:App/robot_task.h ****  * 
  52:App/robot_task.h ****  */
  53:App/robot_task.h **** __attribute((noreturn)) void LogTestTask(void *argument)
  54:App/robot_task.h **** {
  68              		.loc 2 54 1 view -0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		.loc 2 54 1 is_stmt 0 view .LVU1
  74 0000 00B5     		push	{lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 14, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
  55:App/robot_task.h ****     static int test_num = 0;
  81              		.loc 2 55 5 is_stmt 1 view .LVU2
  56:App/robot_task.h ****     LOGINFO("LogTask is ready!\n");
  82              		.loc 2 56 5 view .LVU3
  83 0004 1E4B     		ldr	r3, .L8
  84 0006 0093     		str	r3, [sp]
  85 0008 1E4B     		ldr	r3, .L8+4
  86 000a 1F4A     		ldr	r2, .L8+8
  87 000c 1F49     		ldr	r1, .L8+12
  88 000e 0020     		movs	r0, #0
  89              	.LVL1:
  90              		.loc 2 56 5 is_stmt 0 view .LVU4
  91 0010 FFF7FEFF 		bl	SEGGER_RTT_printf
  92              	.LVL2:
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 4


  93 0014 2BE0     		b	.L4
  94              	.L6:
  57:App/robot_task.h ****     for(;;)
  58:App/robot_task.h ****     {
  59:App/robot_task.h ****         if(test_num)
  60:App/robot_task.h ****         {
  61:App/robot_task.h ****             LOGINFO("HELLO WORLD!");
  95              		.loc 2 61 13 is_stmt 1 view .LVU5
  96 0016 1A4C     		ldr	r4, .L8
  97 0018 0094     		str	r4, [sp]
  98 001a 1A4B     		ldr	r3, .L8+4
  99 001c 1A4A     		ldr	r2, .L8+8
 100 001e 1C49     		ldr	r1, .L8+16
 101 0020 0020     		movs	r0, #0
 102 0022 FFF7FEFF 		bl	SEGGER_RTT_printf
 103              	.LVL3:
  62:App/robot_task.h ****             LOGWARNING("Fuck!the number is %d",test_num);
 104              		.loc 2 62 13 view .LVU6
 105 0026 0194     		str	r4, [sp, #4]
 106 0028 1A4C     		ldr	r4, .L8+20
 107 002a 2368     		ldr	r3, [r4]
 108 002c 0093     		str	r3, [sp]
 109 002e 1A4B     		ldr	r3, .L8+24
 110 0030 1A4A     		ldr	r2, .L8+28
 111 0032 1B49     		ldr	r1, .L8+32
 112 0034 0020     		movs	r0, #0
 113 0036 FFF7FEFF 		bl	SEGGER_RTT_printf
 114              	.LVL4:
  63:App/robot_task.h ****             test_num = 0;
 115              		.loc 2 63 13 view .LVU7
 116              		.loc 2 63 22 is_stmt 0 view .LVU8
 117 003a 0023     		movs	r3, #0
 118 003c 2360     		str	r3, [r4]
 119 003e 1AE0     		b	.L2
 120              	.L7:
  64:App/robot_task.h ****         }
  65:App/robot_task.h ****         if(!test_num)
  66:App/robot_task.h ****         {
  67:App/robot_task.h ****             LOGINFO("FUCK WORLD!");
 121              		.loc 2 67 13 is_stmt 1 view .LVU9
 122 0040 0F4C     		ldr	r4, .L8
 123 0042 0094     		str	r4, [sp]
 124 0044 0F4B     		ldr	r3, .L8+4
 125 0046 104A     		ldr	r2, .L8+8
 126 0048 1649     		ldr	r1, .L8+36
 127 004a 0020     		movs	r0, #0
 128 004c FFF7FEFF 		bl	SEGGER_RTT_printf
 129              	.LVL5:
  68:App/robot_task.h ****             LOGERROR("shit!the number is %d",test_num);
 130              		.loc 2 68 13 view .LVU10
 131 0050 0194     		str	r4, [sp, #4]
 132 0052 104C     		ldr	r4, .L8+20
 133 0054 2368     		ldr	r3, [r4]
 134 0056 0093     		str	r3, [sp]
 135 0058 134B     		ldr	r3, .L8+40
 136 005a 144A     		ldr	r2, .L8+44
 137 005c 1449     		ldr	r1, .L8+48
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 5


 138 005e 0020     		movs	r0, #0
 139 0060 FFF7FEFF 		bl	SEGGER_RTT_printf
 140              	.LVL6:
  69:App/robot_task.h ****             test_num = 1;
 141              		.loc 2 69 13 view .LVU11
 142              		.loc 2 69 22 is_stmt 0 view .LVU12
 143 0064 0123     		movs	r3, #1
 144 0066 2360     		str	r3, [r4]
 145              	.L3:
  70:App/robot_task.h ****         }
  71:App/robot_task.h ****         osDelay(10);   
 146              		.loc 2 71 9 is_stmt 1 view .LVU13
 147 0068 0A20     		movs	r0, #10
 148 006a FFF7FEFF 		bl	osDelay
 149              	.LVL7:
  57:App/robot_task.h ****     {
 150              		.loc 2 57 5 view .LVU14
 151              	.L4:
  57:App/robot_task.h ****     {
 152              		.loc 2 57 5 view .LVU15
  59:App/robot_task.h ****         {
 153              		.loc 2 59 9 view .LVU16
  59:App/robot_task.h ****         {
 154              		.loc 2 59 12 is_stmt 0 view .LVU17
 155 006e 094B     		ldr	r3, .L8+20
 156 0070 1B68     		ldr	r3, [r3]
  59:App/robot_task.h ****         {
 157              		.loc 2 59 11 view .LVU18
 158 0072 002B     		cmp	r3, #0
 159 0074 CFD1     		bne	.L6
 160              	.L2:
  65:App/robot_task.h ****         {
 161              		.loc 2 65 9 is_stmt 1 view .LVU19
  65:App/robot_task.h ****         {
 162              		.loc 2 65 12 is_stmt 0 view .LVU20
 163 0076 074B     		ldr	r3, .L8+20
 164 0078 1B68     		ldr	r3, [r3]
  65:App/robot_task.h ****         {
 165              		.loc 2 65 11 view .LVU21
 166 007a 002B     		cmp	r3, #0
 167 007c E0D0     		beq	.L7
 168 007e F3E7     		b	.L3
 169              	.L9:
 170              		.align	2
 171              	.L8:
 172 0080 2C000000 		.word	.LC3
 173 0084 00000000 		.word	.LC0
 174 0088 04000000 		.word	.LC1
 175 008c 0C000000 		.word	.LC2
 176 0090 34000000 		.word	.LC4
 177 0094 00000000 		.word	test_num.0
 178 0098 4C000000 		.word	.LC5
 179 009c 50000000 		.word	.LC6
 180 00a0 58000000 		.word	.LC7
 181 00a4 78000000 		.word	.LC8
 182 00a8 90000000 		.word	.LC9
 183 00ac 94000000 		.word	.LC10
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 6


 184 00b0 9C000000 		.word	.LC11
 185              		.cfi_endproc
 186              	.LFE142:
 188              		.section	.text.DebugTask,"ax",%progbits
 189              		.align	1
 190              		.global	DebugTask
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	DebugTask:
 196              	.LFB143:
  72:App/robot_task.h ****     }
  73:App/robot_task.h **** }
  74:App/robot_task.h **** 
  75:App/robot_task.h **** /**
  76:App/robot_task.h ****  * @brief 测试调试的函数任务
  77:App/robot_task.h ****  * 
  78:App/robot_task.h ****  */
  79:App/robot_task.h **** __attribute((noreturn)) void DebugTask(void *argument)
  80:App/robot_task.h **** {
 197              		.loc 2 80 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ Volatile: function does not return.
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL8:
 203              		.loc 2 80 1 is_stmt 0 view .LVU23
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI2:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 209              	.LVL9:
 210              	.L11:
  81:App/robot_task.h **** 
  82:App/robot_task.h ****     for(;;)
 211              		.loc 2 82 5 is_stmt 1 view .LVU24
  83:App/robot_task.h ****     {
  84:App/robot_task.h ****         
  85:App/robot_task.h ****         osDelay(1);
 212              		.loc 2 85 9 discriminator 1 view .LVU25
 213 0002 0120     		movs	r0, #1
 214 0004 FFF7FEFF 		bl	osDelay
 215              	.LVL10:
  82:App/robot_task.h ****     {
 216              		.loc 2 82 5 view .LVU26
 217 0008 FBE7     		b	.L11
 218              		.cfi_endproc
 219              	.LFE143:
 221              		.section	.rodata.osTaskInit.str1.4,"aMS",%progbits,1
 222              		.align	2
 223              	.LC12:
 224 0000 4C6F6754 		.ascii	"LogTestTaskHand\000"
 224      65737454 
 224      61736B48 
 224      616E6400 
 225              		.align	2
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 7


 226              	.LC13:
 227 0010 44656275 		.ascii	"DebugTaskHandle\000"
 227      67546173 
 227      6B48616E 
 227      646C6500 
 228              		.section	.text.osTaskInit,"ax",%progbits
 229              		.align	1
 230              		.global	osTaskInit
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	osTaskInit:
 236              	.LFB141:
  30:App/robot_task.h ****     const osThreadAttr_t LogTestTaskHand_attributes = {
 237              		.loc 2 30 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 72
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 70B5     		push	{r4, r5, r6, lr}
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 6, -8
 247              		.cfi_offset 14, -4
 248 0002 92B0     		sub	sp, sp, #72
 249              	.LCFI4:
 250              		.cfi_def_cfa_offset 88
  31:App/robot_task.h ****     .name = "LogTestTaskHand",
 251              		.loc 2 31 5 view .LVU28
  31:App/robot_task.h ****     .name = "LogTestTaskHand",
 252              		.loc 2 31 26 is_stmt 0 view .LVU29
 253 0004 2426     		movs	r6, #36
 254 0006 3246     		mov	r2, r6
 255 0008 0021     		movs	r1, #0
 256 000a 0DEB0600 		add	r0, sp, r6
 257 000e FFF7FEFF 		bl	memset
 258              	.LVL11:
 259 0012 104B     		ldr	r3, .L15
 260 0014 0993     		str	r3, [sp, #36]
 261 0016 4FF40075 		mov	r5, #512
 262 001a 0E95     		str	r5, [sp, #56]
 263 001c 0824     		movs	r4, #8
 264 001e 0F94     		str	r4, [sp, #60]
  36:App/robot_task.h **** 
 265              		.loc 2 36 5 is_stmt 1 view .LVU30
  36:App/robot_task.h **** 
 266              		.loc 2 36 29 is_stmt 0 view .LVU31
 267 0020 0DEB0602 		add	r2, sp, r6
 268 0024 0021     		movs	r1, #0
 269 0026 0C48     		ldr	r0, .L15+4
 270 0028 FFF7FEFF 		bl	osThreadNew
 271              	.LVL12:
  36:App/robot_task.h **** 
 272              		.loc 2 36 27 discriminator 1 view .LVU32
 273 002c 0B4B     		ldr	r3, .L15+8
 274 002e 1860     		str	r0, [r3]
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 8


  39:App/robot_task.h ****     .name = "DebugTaskHandle",
 275              		.loc 2 39 5 is_stmt 1 view .LVU33
  39:App/robot_task.h ****     .name = "DebugTaskHandle",
 276              		.loc 2 39 26 is_stmt 0 view .LVU34
 277 0030 3246     		mov	r2, r6
 278 0032 0021     		movs	r1, #0
 279 0034 6846     		mov	r0, sp
 280 0036 FFF7FEFF 		bl	memset
 281              	.LVL13:
 282 003a 094B     		ldr	r3, .L15+12
 283 003c 0093     		str	r3, [sp]
 284 003e 0595     		str	r5, [sp, #20]
 285 0040 0694     		str	r4, [sp, #24]
  44:App/robot_task.h **** 
 286              		.loc 2 44 5 is_stmt 1 view .LVU35
  44:App/robot_task.h **** 
 287              		.loc 2 44 29 is_stmt 0 view .LVU36
 288 0042 6A46     		mov	r2, sp
 289 0044 0021     		movs	r1, #0
 290 0046 0748     		ldr	r0, .L15+16
 291 0048 FFF7FEFF 		bl	osThreadNew
 292              	.LVL14:
  44:App/robot_task.h **** 
 293              		.loc 2 44 27 discriminator 1 view .LVU37
 294 004c 064B     		ldr	r3, .L15+20
 295 004e 1860     		str	r0, [r3]
  46:App/robot_task.h **** 
 296              		.loc 2 46 1 view .LVU38
 297 0050 12B0     		add	sp, sp, #72
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 16
 300              		@ sp needed
 301 0052 70BD     		pop	{r4, r5, r6, pc}
 302              	.L16:
 303              		.align	2
 304              	.L15:
 305 0054 00000000 		.word	.LC12
 306 0058 00000000 		.word	LogTestTask
 307 005c 00000000 		.word	LogTestTaskHandHandle
 308 0060 10000000 		.word	.LC13
 309 0064 00000000 		.word	DebugTask
 310 0068 00000000 		.word	DebugTaskHandleHandle
 311              		.cfi_endproc
 312              	.LFE141:
 314              		.section	.text.Bsp_Init,"ax",%progbits
 315              		.align	1
 316              		.global	Bsp_Init
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 321              	Bsp_Init:
 322              	.LFB144:
 323              		.file 3 "Bsp/bsp_init.h"
   1:Bsp/bsp_init.h **** /**
   2:Bsp/bsp_init.h ****  * @file bsp_init.h
   3:Bsp/bsp_init.h ****  * @author Keten (2863861004@qq.com)
   4:Bsp/bsp_init.h ****  * @brief bsp层 初始化文件 只初始化需要用的模块
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 9


   5:Bsp/bsp_init.h ****  * @version 0.1
   6:Bsp/bsp_init.h ****  * @date 2024-09-14
   7:Bsp/bsp_init.h ****  * 
   8:Bsp/bsp_init.h ****  * @copyright Copyright (c) 2024
   9:Bsp/bsp_init.h ****  * 
  10:Bsp/bsp_init.h ****  * @attention :
  11:Bsp/bsp_init.h ****  * @note :
  12:Bsp/bsp_init.h ****  * @versioninfo :
  13:Bsp/bsp_init.h ****  */
  14:Bsp/bsp_init.h **** #pragma once
  15:Bsp/bsp_init.h **** 
  16:Bsp/bsp_init.h **** #include "bsp_log.h"
  17:Bsp/bsp_init.h **** #include "bsp_dwt.h"
  18:Bsp/bsp_init.h **** 
  19:Bsp/bsp_init.h **** void Bsp_Init()
  20:Bsp/bsp_init.h **** {
 324              		.loc 3 20 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
  21:Bsp/bsp_init.h ****     /* stm32f4 芯片主频 168MHz */
  22:Bsp/bsp_init.h ****     DWT_Init(168);    
 333              		.loc 3 22 5 view .LVU40
 334 0002 A820     		movs	r0, #168
 335 0004 FFF7FEFF 		bl	DWT_Init
 336              	.LVL15:
  23:Bsp/bsp_init.h ****     BSPLogInit();
 337              		.loc 3 23 5 view .LVU41
 338 0008 FFF7FEFF 		bl	BSPLogInit
 339              	.LVL16:
  24:Bsp/bsp_init.h **** }
 340              		.loc 3 24 1 is_stmt 0 view .LVU42
 341 000c 08BD     		pop	{r3, pc}
 342              		.cfi_endproc
 343              	.LFE144:
 345              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_TIM_PeriodElapsedCallback
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	HAL_TIM_PeriodElapsedCallback:
 353              	.LVL17:
 354              	.LFB147:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 10


   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "cmsis_os.h"
  22:Src/main.c    **** #include "gpio.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* App层头文件接口 */
  28:Src/main.c    **** #include "robot_task.h"
  29:Src/main.c    **** /* Bsp层头文件接口 */
  30:Src/main.c    **** #include "bsp_init.h"
  31:Src/main.c    **** #include "bsp_log.h"
  32:Src/main.c    **** /* USER CODE END Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** void MX_FREERTOS_Init(void);
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 11


  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   * @retval int
  70:Src/main.c    ****   */
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
  88:Src/main.c    ****   SystemClock_Config();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   __disable_irq();
  98:Src/main.c    ****   osTaskInit();
  99:Src/main.c    ****   Bsp_Init();
 100:Src/main.c    ****   __enable_irq();
 101:Src/main.c    ****   LOG_CLEAR();
 102:Src/main.c    ****   LOGINFO("FreeRTOS is Ready!\n");
 103:Src/main.c    ****   /* USER CODE END 2 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Init scheduler */
 106:Src/main.c    ****   osKernelInitialize();
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 109:Src/main.c    ****   MX_FREERTOS_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Start scheduler */
 112:Src/main.c    ****   osKernelStart();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   while (1)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     /* USER CODE END WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* USER CODE BEGIN 3 */
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 12


 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 3 */
 125:Src/main.c    **** }
 126:Src/main.c    **** 
 127:Src/main.c    **** /**
 128:Src/main.c    ****   * @brief System Clock Configuration
 129:Src/main.c    ****   * @retval None
 130:Src/main.c    ****   */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Src/main.c    **** 
 136:Src/main.c    ****   /** Configure the main internal regulator output voltage
 137:Src/main.c    ****   */
 138:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 139:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140:Src/main.c    **** 
 141:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 143:Src/main.c    ****   */
 144:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 145:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 152:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     Error_Handler();
 155:Src/main.c    ****   }
 156:Src/main.c    **** 
 157:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 158:Src/main.c    ****   */
 159:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 160:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 161:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 162:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 163:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 164:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 165:Src/main.c    **** 
 166:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 169:Src/main.c    ****   }
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /* USER CODE BEGIN 4 */
 173:Src/main.c    **** 
 174:Src/main.c    **** /* USER CODE END 4 */
 175:Src/main.c    **** 
 176:Src/main.c    **** /**
 177:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 178:Src/main.c    ****   * @note   This function is called  when TIM2 interrupt took place, inside
 179:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 13


 180:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 181:Src/main.c    ****   * @param  htim : TIM handle
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 185:Src/main.c    **** {
 355              		.loc 1 185 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 185 1 is_stmt 0 view .LVU44
 360 0000 08B5     		push	{r3, lr}
 361              	.LCFI7:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 186:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END Callback 0 */
 189:Src/main.c    ****   if (htim->Instance == TIM2) {
 365              		.loc 1 189 3 is_stmt 1 view .LVU45
 366              		.loc 1 189 11 is_stmt 0 view .LVU46
 367 0002 0368     		ldr	r3, [r0]
 368              		.loc 1 189 6 view .LVU47
 369 0004 B3F1804F 		cmp	r3, #1073741824
 370 0008 00D0     		beq	.L22
 371              	.LVL18:
 372              	.L19:
 190:Src/main.c    ****     HAL_IncTick();
 191:Src/main.c    ****   }
 192:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE END Callback 1 */
 195:Src/main.c    **** }
 373              		.loc 1 195 1 view .LVU48
 374 000a 08BD     		pop	{r3, pc}
 375              	.LVL19:
 376              	.L22:
 190:Src/main.c    ****     HAL_IncTick();
 377              		.loc 1 190 5 is_stmt 1 view .LVU49
 378 000c FFF7FEFF 		bl	HAL_IncTick
 379              	.LVL20:
 380              		.loc 1 195 1 is_stmt 0 view .LVU50
 381 0010 FBE7     		b	.L19
 382              		.cfi_endproc
 383              	.LFE147:
 385              		.section	.text.Error_Handler,"ax",%progbits
 386              		.align	1
 387              		.global	Error_Handler
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	Error_Handler:
 393              	.LFB148:
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 14


 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** void Error_Handler(void)
 202:Src/main.c    **** {
 394              		.loc 1 202 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ Volatile: function does not return.
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 203:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 205:Src/main.c    ****   __disable_irq();
 400              		.loc 1 205 3 view .LVU52
 401              	.LBB8:
 402              	.LBI8:
 403              		.file 4 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 15


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 16


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 17


 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 18


 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 19


 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 20


 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 21


 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 22


 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 23


 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 24


 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 25


 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 26


 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 27


 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 28


 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 29


 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 30


 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 31


 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 404              		.loc 4 960 27 view .LVU53
 405              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 406              		.loc 4 962 3 view .LVU54
 407              		.syntax unified
 408              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 409 0000 72B6     		cpsid i
 410              	@ 0 "" 2
 411              		.thumb
 412              		.syntax unified
 413              	.L24:
 414              	.LBE9:
 415              	.LBE8:
 206:Src/main.c    ****   while (1)
 416              		.loc 1 206 3 view .LVU55
 207:Src/main.c    ****   {
 208:Src/main.c    ****   }
 417              		.loc 1 208 3 view .LVU56
 206:Src/main.c    ****   while (1)
 418              		.loc 1 206 9 view .LVU57
 419 0002 FEE7     		b	.L24
 420              		.cfi_endproc
 421              	.LFE148:
 423              		.section	.text.SystemClock_Config,"ax",%progbits
 424              		.align	1
 425              		.global	SystemClock_Config
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 430              	SystemClock_Config:
 431              	.LFB146:
 132:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 432              		.loc 1 132 1 view -0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 80
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436 0000 00B5     		push	{lr}
 437              	.LCFI8:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 14, -4
 440 0002 95B0     		sub	sp, sp, #84
 441              	.LCFI9:
 442              		.cfi_def_cfa_offset 88
 133:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 443              		.loc 1 133 3 view .LVU59
 133:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 444              		.loc 1 133 22 is_stmt 0 view .LVU60
 445 0004 3022     		movs	r2, #48
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 32


 446 0006 0021     		movs	r1, #0
 447 0008 08A8     		add	r0, sp, #32
 448 000a FFF7FEFF 		bl	memset
 449              	.LVL21:
 134:Src/main.c    **** 
 450              		.loc 1 134 3 is_stmt 1 view .LVU61
 134:Src/main.c    **** 
 451              		.loc 1 134 22 is_stmt 0 view .LVU62
 452 000e 0023     		movs	r3, #0
 453 0010 0393     		str	r3, [sp, #12]
 454 0012 0493     		str	r3, [sp, #16]
 455 0014 0593     		str	r3, [sp, #20]
 456 0016 0693     		str	r3, [sp, #24]
 457 0018 0793     		str	r3, [sp, #28]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 458              		.loc 1 138 3 is_stmt 1 view .LVU63
 459              	.LBB10:
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 460              		.loc 1 138 3 view .LVU64
 461 001a 0193     		str	r3, [sp, #4]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 462              		.loc 1 138 3 view .LVU65
 463 001c 204A     		ldr	r2, .L31
 464 001e 116C     		ldr	r1, [r2, #64]
 465 0020 41F08051 		orr	r1, r1, #268435456
 466 0024 1164     		str	r1, [r2, #64]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 467              		.loc 1 138 3 view .LVU66
 468 0026 126C     		ldr	r2, [r2, #64]
 469 0028 02F08052 		and	r2, r2, #268435456
 470 002c 0192     		str	r2, [sp, #4]
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 471              		.loc 1 138 3 view .LVU67
 472 002e 019A     		ldr	r2, [sp, #4]
 473              	.LBE10:
 138:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 474              		.loc 1 138 3 view .LVU68
 139:Src/main.c    **** 
 475              		.loc 1 139 3 view .LVU69
 476              	.LBB11:
 139:Src/main.c    **** 
 477              		.loc 1 139 3 view .LVU70
 478 0030 0293     		str	r3, [sp, #8]
 139:Src/main.c    **** 
 479              		.loc 1 139 3 view .LVU71
 480 0032 1C4B     		ldr	r3, .L31+4
 481 0034 1A68     		ldr	r2, [r3]
 482 0036 42F48042 		orr	r2, r2, #16384
 483 003a 1A60     		str	r2, [r3]
 139:Src/main.c    **** 
 484              		.loc 1 139 3 view .LVU72
 485 003c 1B68     		ldr	r3, [r3]
 486 003e 03F48043 		and	r3, r3, #16384
 487 0042 0293     		str	r3, [sp, #8]
 139:Src/main.c    **** 
 488              		.loc 1 139 3 view .LVU73
 489 0044 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 33


 490              	.LBE11:
 139:Src/main.c    **** 
 491              		.loc 1 139 3 view .LVU74
 144:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 492              		.loc 1 144 3 view .LVU75
 144:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 493              		.loc 1 144 36 is_stmt 0 view .LVU76
 494 0046 0123     		movs	r3, #1
 495 0048 0893     		str	r3, [sp, #32]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 496              		.loc 1 145 3 is_stmt 1 view .LVU77
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 497              		.loc 1 145 30 is_stmt 0 view .LVU78
 498 004a 4FF48033 		mov	r3, #65536
 499 004e 0993     		str	r3, [sp, #36]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 500              		.loc 1 146 3 is_stmt 1 view .LVU79
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 501              		.loc 1 146 34 is_stmt 0 view .LVU80
 502 0050 0222     		movs	r2, #2
 503 0052 0E92     		str	r2, [sp, #56]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 504              		.loc 1 147 3 is_stmt 1 view .LVU81
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 505              		.loc 1 147 35 is_stmt 0 view .LVU82
 506 0054 4FF48003 		mov	r3, #4194304
 507 0058 0F93     		str	r3, [sp, #60]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 508              		.loc 1 148 3 is_stmt 1 view .LVU83
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 509              		.loc 1 148 30 is_stmt 0 view .LVU84
 510 005a 0423     		movs	r3, #4
 511 005c 1093     		str	r3, [sp, #64]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 512              		.loc 1 149 3 is_stmt 1 view .LVU85
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 513              		.loc 1 149 30 is_stmt 0 view .LVU86
 514 005e A821     		movs	r1, #168
 515 0060 1191     		str	r1, [sp, #68]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 516              		.loc 1 150 3 is_stmt 1 view .LVU87
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 517              		.loc 1 150 30 is_stmt 0 view .LVU88
 518 0062 1292     		str	r2, [sp, #72]
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 519              		.loc 1 151 3 is_stmt 1 view .LVU89
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 520              		.loc 1 151 30 is_stmt 0 view .LVU90
 521 0064 1393     		str	r3, [sp, #76]
 152:Src/main.c    ****   {
 522              		.loc 1 152 3 is_stmt 1 view .LVU91
 152:Src/main.c    ****   {
 523              		.loc 1 152 7 is_stmt 0 view .LVU92
 524 0066 08A8     		add	r0, sp, #32
 525 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 526              	.LVL22:
 152:Src/main.c    ****   {
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 34


 527              		.loc 1 152 6 discriminator 1 view .LVU93
 528 006c 98B9     		cbnz	r0, .L29
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 529              		.loc 1 159 3 is_stmt 1 view .LVU94
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 530              		.loc 1 159 31 is_stmt 0 view .LVU95
 531 006e 0F23     		movs	r3, #15
 532 0070 0393     		str	r3, [sp, #12]
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 533              		.loc 1 161 3 is_stmt 1 view .LVU96
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 534              		.loc 1 161 34 is_stmt 0 view .LVU97
 535 0072 0223     		movs	r3, #2
 536 0074 0493     		str	r3, [sp, #16]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 537              		.loc 1 162 3 is_stmt 1 view .LVU98
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 538              		.loc 1 162 35 is_stmt 0 view .LVU99
 539 0076 0023     		movs	r3, #0
 540 0078 0593     		str	r3, [sp, #20]
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 541              		.loc 1 163 3 is_stmt 1 view .LVU100
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 542              		.loc 1 163 36 is_stmt 0 view .LVU101
 543 007a 4FF4A053 		mov	r3, #5120
 544 007e 0693     		str	r3, [sp, #24]
 164:Src/main.c    **** 
 545              		.loc 1 164 3 is_stmt 1 view .LVU102
 164:Src/main.c    **** 
 546              		.loc 1 164 36 is_stmt 0 view .LVU103
 547 0080 4FF48053 		mov	r3, #4096
 548 0084 0793     		str	r3, [sp, #28]
 166:Src/main.c    ****   {
 549              		.loc 1 166 3 is_stmt 1 view .LVU104
 166:Src/main.c    ****   {
 550              		.loc 1 166 7 is_stmt 0 view .LVU105
 551 0086 0521     		movs	r1, #5
 552 0088 03A8     		add	r0, sp, #12
 553 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 554              	.LVL23:
 166:Src/main.c    ****   {
 555              		.loc 1 166 6 discriminator 1 view .LVU106
 556 008e 20B9     		cbnz	r0, .L30
 170:Src/main.c    **** 
 557              		.loc 1 170 1 view .LVU107
 558 0090 15B0     		add	sp, sp, #84
 559              	.LCFI10:
 560              		.cfi_remember_state
 561              		.cfi_def_cfa_offset 4
 562              		@ sp needed
 563 0092 5DF804FB 		ldr	pc, [sp], #4
 564              	.L29:
 565              	.LCFI11:
 566              		.cfi_restore_state
 154:Src/main.c    ****   }
 567              		.loc 1 154 5 is_stmt 1 view .LVU108
 568 0096 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 35


 569              	.LVL24:
 570              	.L30:
 168:Src/main.c    ****   }
 571              		.loc 1 168 5 view .LVU109
 572 009a FFF7FEFF 		bl	Error_Handler
 573              	.LVL25:
 574              	.L32:
 575 009e 00BF     		.align	2
 576              	.L31:
 577 00a0 00380240 		.word	1073887232
 578 00a4 00700040 		.word	1073770496
 579              		.cfi_endproc
 580              	.LFE146:
 582              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 583              		.align	2
 584              	.LC14:
 585 0000 20201B5B 		.ascii	"  \033[2J\000"
 585      324A00
 586 0007 00       		.align	2
 587              	.LC15:
 588 0008 20202573 		.ascii	"  %s%sFreeRTOS is Ready!\012\015\012%s\000"
 588      25734672 
 588      65655254 
 588      4F532069 
 588      73205265 
 589              		.section	.text.main,"ax",%progbits
 590              		.align	1
 591              		.global	main
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 596              	main:
 597              	.LFB145:
  72:Src/main.c    **** 
 598              		.loc 1 72 1 view -0
 599              		.cfi_startproc
 600              		@ Volatile: function does not return.
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603 0000 00B5     		push	{lr}
 604              	.LCFI12:
 605              		.cfi_def_cfa_offset 4
 606              		.cfi_offset 14, -4
 607 0002 83B0     		sub	sp, sp, #12
 608              	.LCFI13:
 609              		.cfi_def_cfa_offset 16
  81:Src/main.c    **** 
 610              		.loc 1 81 3 view .LVU111
 611 0004 FFF7FEFF 		bl	HAL_Init
 612              	.LVL26:
  88:Src/main.c    **** 
 613              		.loc 1 88 3 view .LVU112
 614 0008 FFF7FEFF 		bl	SystemClock_Config
 615              	.LVL27:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 616              		.loc 1 95 3 view .LVU113
 617 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 36


 618              	.LVL28:
  97:Src/main.c    ****   osTaskInit();
 619              		.loc 1 97 3 view .LVU114
 620              	.LBB12:
 621              	.LBI12:
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 622              		.loc 4 960 27 view .LVU115
 623              	.LBB13:
 624              		.loc 4 962 3 view .LVU116
 625              		.syntax unified
 626              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 627 0010 72B6     		cpsid i
 628              	@ 0 "" 2
 629              		.thumb
 630              		.syntax unified
 631              	.LBE13:
 632              	.LBE12:
  98:Src/main.c    ****   Bsp_Init();
 633              		.loc 1 98 3 view .LVU117
 634 0012 FFF7FEFF 		bl	osTaskInit
 635              	.LVL29:
  99:Src/main.c    ****   __enable_irq();
 636              		.loc 1 99 3 view .LVU118
 637 0016 FFF7FEFF 		bl	Bsp_Init
 638              	.LVL30:
 100:Src/main.c    ****   LOG_CLEAR();
 639              		.loc 1 100 3 view .LVU119
 640              	.LBB14:
 641              	.LBI14:
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 642              		.loc 4 949 27 view .LVU120
 643              	.LBB15:
 951:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644              		.loc 4 951 3 view .LVU121
 645              		.syntax unified
 646              	@ 951 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 647 001a 62B6     		cpsie i
 648              	@ 0 "" 2
 649              		.thumb
 650              		.syntax unified
 651              	.LBE15:
 652              	.LBE14:
 101:Src/main.c    ****   LOGINFO("FreeRTOS is Ready!\n");
 653              		.loc 1 101 3 view .LVU122
 654 001c 0949     		ldr	r1, .L36
 655 001e 0020     		movs	r0, #0
 656 0020 FFF7FEFF 		bl	SEGGER_RTT_WriteString
 657              	.LVL31:
 102:Src/main.c    ****   /* USER CODE END 2 */
 658              		.loc 1 102 3 view .LVU123
 659 0024 084B     		ldr	r3, .L36+4
 660 0026 0093     		str	r3, [sp]
 661 0028 084B     		ldr	r3, .L36+8
 662 002a 094A     		ldr	r2, .L36+12
 663 002c 0949     		ldr	r1, .L36+16
 664 002e 0020     		movs	r0, #0
 665 0030 FFF7FEFF 		bl	SEGGER_RTT_printf
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 37


 666              	.LVL32:
 106:Src/main.c    **** 
 667              		.loc 1 106 3 view .LVU124
 668 0034 FFF7FEFF 		bl	osKernelInitialize
 669              	.LVL33:
 109:Src/main.c    **** 
 670              		.loc 1 109 3 view .LVU125
 671 0038 FFF7FEFF 		bl	MX_FREERTOS_Init
 672              	.LVL34:
 112:Src/main.c    **** 
 673              		.loc 1 112 3 view .LVU126
 674 003c FFF7FEFF 		bl	osKernelStart
 675              	.LVL35:
 676              	.L34:
 118:Src/main.c    ****   {
 677              		.loc 1 118 3 view .LVU127
 123:Src/main.c    ****   /* USER CODE END 3 */
 678              		.loc 1 123 3 view .LVU128
 118:Src/main.c    ****   {
 679              		.loc 1 118 9 view .LVU129
 680 0040 FEE7     		b	.L34
 681              	.L37:
 682 0042 00BF     		.align	2
 683              	.L36:
 684 0044 00000000 		.word	.LC14
 685 0048 2C000000 		.word	.LC3
 686 004c 00000000 		.word	.LC0
 687 0050 04000000 		.word	.LC1
 688 0054 08000000 		.word	.LC15
 689              		.cfi_endproc
 690              	.LFE145:
 692              		.section	.bss.test_num.0,"aw",%nobits
 693              		.align	2
 696              	test_num.0:
 697 0000 00000000 		.space	4
 698              		.global	DebugTaskHandleHandle
 699              		.section	.bss.DebugTaskHandleHandle,"aw",%nobits
 700              		.align	2
 703              	DebugTaskHandleHandle:
 704 0000 00000000 		.space	4
 705              		.global	LogTestTaskHandHandle
 706              		.section	.bss.LogTestTaskHandHandle,"aw",%nobits
 707              		.align	2
 710              	LogTestTaskHandHandle:
 711 0000 00000000 		.space	4
 712              		.text
 713              	.Letext0:
 714              		.file 5 "C:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 715              		.file 6 "C:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 716              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 717              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 718              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 719              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 720              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 721              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 722              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 723              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 38


 724              		.file 15 "Middlewares/Third_Party/SEGGER/RTT/SEGGER_RTT.h"
 725              		.file 16 "Inc/gpio.h"
 726              		.file 17 "Bsp/log/bsp_log.h"
 727              		.file 18 "Bsp/dwt/bsp_dwt.h"
 728              		.file 19 "<built-in>"
ARM GAS  C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:21     .rodata.LogTestTask.str1.4:00000000 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:58     .text.LogTestTask:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:64     .text.LogTestTask:00000000 LogTestTask
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:172    .text.LogTestTask:00000080 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:696    .bss.test_num.0:00000000 test_num.0
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:189    .text.DebugTask:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:195    .text.DebugTask:00000000 DebugTask
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:222    .rodata.osTaskInit.str1.4:00000000 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:229    .text.osTaskInit:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:235    .text.osTaskInit:00000000 osTaskInit
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:305    .text.osTaskInit:00000054 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:710    .bss.LogTestTaskHandHandle:00000000 LogTestTaskHandHandle
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:703    .bss.DebugTaskHandleHandle:00000000 DebugTaskHandleHandle
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:315    .text.Bsp_Init:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:321    .text.Bsp_Init:00000000 Bsp_Init
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:346    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:352    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:386    .text.Error_Handler:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:392    .text.Error_Handler:00000000 Error_Handler
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:424    .text.SystemClock_Config:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:430    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:577    .text.SystemClock_Config:000000a0 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:583    .rodata.main.str1.4:00000000 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:590    .text.main:00000000 $t
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:596    .text.main:00000000 main
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:684    .text.main:00000044 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:693    .bss.test_num.0:00000000 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:700    .bss.DebugTaskHandleHandle:00000000 $d
C:\Users\KETEN_~1\AppData\Local\Temp\ccHbULPR.s:707    .bss.LogTestTaskHandHandle:00000000 $d

UNDEFINED SYMBOLS
SEGGER_RTT_printf
osDelay
memset
osThreadNew
DWT_Init
BSPLogInit
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
SEGGER_RTT_WriteString
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
